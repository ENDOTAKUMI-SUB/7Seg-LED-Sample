

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jan 12 10:52:10 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	swtext1,local,class=CONST,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F1827 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  0111                     	;# 
    96  0112                     	;# 
    97  0113                     	;# 
    98  0114                     	;# 
    99  0115                     	;# 
   100  0116                     	;# 
   101  0117                     	;# 
   102  0118                     	;# 
   103  0119                     	;# 
   104  011A                     	;# 
   105  011B                     	;# 
   106  011D                     	;# 
   107  011E                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0199                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020D                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0219                     	;# 
   148  021A                     	;# 
   149  021B                     	;# 
   150  021C                     	;# 
   151  021D                     	;# 
   152  021E                     	;# 
   153  021F                     	;# 
   154  0291                     	;# 
   155  0291                     	;# 
   156  0292                     	;# 
   157  0293                     	;# 
   158  0294                     	;# 
   159  0295                     	;# 
   160  0295                     	;# 
   161  0296                     	;# 
   162  0298                     	;# 
   163  0298                     	;# 
   164  0299                     	;# 
   165  029A                     	;# 
   166  029B                     	;# 
   167  029C                     	;# 
   168  029C                     	;# 
   169  029D                     	;# 
   170  029E                     	;# 
   171  029E                     	;# 
   172  0311                     	;# 
   173  0311                     	;# 
   174  0312                     	;# 
   175  0313                     	;# 
   176  0318                     	;# 
   177  0318                     	;# 
   178  0319                     	;# 
   179  031A                     	;# 
   180  0394                     	;# 
   181  0395                     	;# 
   182  0396                     	;# 
   183  039A                     	;# 
   184  039C                     	;# 
   185  039D                     	;# 
   186  039E                     	;# 
   187  039F                     	;# 
   188  0415                     	;# 
   189  0416                     	;# 
   190  0417                     	;# 
   191  041C                     	;# 
   192  041D                     	;# 
   193  041E                     	;# 
   194  0FE4                     	;# 
   195  0FE5                     	;# 
   196  0FE6                     	;# 
   197  0FE7                     	;# 
   198  0FE8                     	;# 
   199  0FE9                     	;# 
   200  0FEA                     	;# 
   201  0FEB                     	;# 
   202  0FED                     	;# 
   203  0FEE                     	;# 
   204  0FEF                     	;# 
   205  000D                     _PORTB	set	13
   206  000C                     _PORTA	set	12
   207  006A                     _RB2	set	106
   208  0069                     _RB1	set	105
   209  006D                     _RB5	set	109
   210  006C                     _RB4	set	108
   211  0067                     _RA7	set	103
   212  0063                     _RA3	set	99
   213  0062                     _RA2	set	98
   214  0061                     _RA1	set	97
   215  0060                     _RA0	set	96
   216  008D                     _TRISB	set	141
   217  008C                     _TRISA	set	140
   218  0099                     _OSCCON	set	153
   219  018D                     _ANSELB	set	397
   220  018C                     _ANSELA	set	396
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  07FD                     start_initialization:	
   226  07FD                     __initialization:	
   227  07FD                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  07FD                     __end_of__initialization:	
   231  07FD  0020               	movlb	0
   232  07FE  3187  2F6B         	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	cstackCOMMON
   235  0070                     __pcstackCOMMON:	
   236  0070                     ?_Wait:	
   237  0070                     ?_init:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ??_init:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_seg:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     Wait@num:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     seg@numeric:	
   253                           ; 2 bytes @ 0x0
   254                           
   255                           
   256                           ; 2 bytes @ 0x0
   257  0070                     	ds	2
   258  0072                     ??_Wait:	
   259  0072                     ??_seg:	
   260                           ; 1 bytes @ 0x2
   261                           
   262                           
   263                           ; 1 bytes @ 0x2
   264  0072                     	ds	1
   265  0073                     Wait@i:	
   266                           
   267                           ; 2 bytes @ 0x3
   268  0073                     	ds	2
   269  0075                     ??_main:	
   270  0075                     main@b:	
   271                           ; 1 bytes @ 0x5
   272                           
   273                           
   274                           ; 2 bytes @ 0x5
   275  0075                     	ds	2
   276  0077                     main@i:	
   277                           
   278                           ; 2 bytes @ 0x7
   279  0077                     	ds	2
   280  0079                     main@a:	
   281                           
   282                           ; 2 bytes @ 0x9
   283  0079                     	ds	2
   284  007B                     main@x:	
   285                           
   286                           ; 2 bytes @ 0xB
   287  007B                     	ds	2
   288                           
   289                           	psect	maintext
   290  076B                     __pmaintext:	
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 152 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  x               2   11[COMMON] unsigned int 
   301 ;;  a               2    9[COMMON] int 
   302 ;;  i               2    7[COMMON] unsigned int 
   303 ;;  b               2    5[COMMON] int 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B1F/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   313 ;;      Params:         0       0       0       0       0       0
   314 ;;      Locals:         8       0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0
   316 ;;      Totals:         8       0       0       0       0       0
   317 ;;Total ram usage:        8 bytes
   318 ;; Hardware stack levels required when called:    1
   319 ;; This function calls:
   320 ;;		_Wait
   321 ;;		_init
   322 ;;		_seg
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           
   329                           ;psect for function _main
   330  076B                     _main:	
   331                           
   332                           ;main.c: 153: init();
   333                           
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   336  076B  3186  26DC  3187   	fcall	_init
   337                           
   338                           ;main.c: 155: unsigned int i,x;
   339                           ;main.c: 156: int a = 0, b = 0;
   340  076E  01F9               	clrf	main@a
   341  076F  01FA               	clrf	main@a+1
   342  0770  01F5               	clrf	main@b
   343  0771  01F6               	clrf	main@b+1
   344                           
   345                           ;main.c: 158: for(x = 0;x<10;x++){
   346  0772  01FB               	clrf	main@x
   347  0773  01FC               	clrf	main@x+1
   348  0774  3000               	movlw	0
   349  0775  027C               	subwf	main@x+1,w
   350  0776  300A               	movlw	10
   351  0777  1903               	skipnz
   352  0778  027B               	subwf	main@x,w
   353  0779  1803               	btfsc	3,0
   354  077A  2FB5               	goto	l726
   355  077B                     l704:	
   356                           
   357                           ;main.c: 159: i = 40;
   358  077B  3028               	movlw	40
   359  077C  00F7               	movwf	main@i
   360  077D  3000               	movlw	0
   361  077E  00F8               	movwf	main@i+1
   362  077F                     l722:	
   363                           ;main.c: 160: while(i>=1) {
   364                           
   365  077F  0877               	movf	main@i,w
   366  0780  0478               	iorwf	main@i+1,w
   367  0781  1903               	btfsc	3,2
   368  0782  2FAA               	goto	l724
   369                           
   370                           ;main.c: 161: seg(x);
   371  0783  087C               	movf	main@x+1,w
   372  0784  00F1               	movwf	seg@numeric+1
   373  0785  087B               	movf	main@x,w
   374  0786  00F0               	movwf	seg@numeric
   375  0787  3187  2700  3187   	fcall	_seg
   376                           
   377                           ;main.c: 163: RB1 = 1;
   378  078A  0020               	movlb	0	; select bank0
   379  078B  148D               	bsf	13,1	;volatile
   380                           
   381                           ;main.c: 164: RB2 = 0;
   382  078C  110D               	bcf	13,2	;volatile
   383                           
   384                           ;main.c: 166: Wait(1);
   385  078D  3001               	movlw	1
   386  078E  00F0               	movwf	Wait@num
   387  078F  3000               	movlw	0
   388  0790  00F1               	movwf	Wait@num+1
   389  0791  3186  26E9  3187   	fcall	_Wait
   390                           
   391                           ;main.c: 168: seg(x);
   392  0794  087C               	movf	main@x+1,w
   393  0795  00F1               	movwf	seg@numeric+1
   394  0796  087B               	movf	main@x,w
   395  0797  00F0               	movwf	seg@numeric
   396  0798  3187  2700  3187   	fcall	_seg
   397                           
   398                           ;main.c: 169: RB1 = 0;
   399  079B  0020               	movlb	0	; select bank0
   400  079C  108D               	bcf	13,1	;volatile
   401                           
   402                           ;main.c: 170: RB2 = 1;
   403  079D  150D               	bsf	13,2	;volatile
   404                           
   405                           ;main.c: 173: Wait(1);
   406  079E  3001               	movlw	1
   407  079F  00F0               	movwf	Wait@num
   408  07A0  3000               	movlw	0
   409  07A1  00F1               	movwf	Wait@num+1
   410  07A2  3186  26E9  3187   	fcall	_Wait
   411                           
   412                           ;main.c: 175: i--;
   413  07A5  3001               	movlw	1
   414  07A6  02F7               	subwf	main@i,f
   415  07A7  3000               	movlw	0
   416  07A8  3BF8               	subwfb	main@i+1,f
   417  07A9  2F7F               	goto	l722
   418  07AA                     l724:	
   419  07AA  3001               	movlw	1
   420  07AB  07FB               	addwf	main@x,f
   421  07AC  3000               	movlw	0
   422  07AD  3DFC               	addwfc	main@x+1,f
   423  07AE  3000               	movlw	0
   424  07AF  027C               	subwf	main@x+1,w
   425  07B0  300A               	movlw	10
   426  07B1  1903               	skipnz
   427  07B2  027B               	subwf	main@x,w
   428  07B3  1C03               	skipc
   429  07B4  2F7B               	goto	l704
   430  07B5                     l726:	
   431                           ;main.c: 176: }
   432                           ;main.c: 177: }
   433                           ;main.c: 179: while(1){
   434                           
   435                           
   436                           ;main.c: 180: i = 4;
   437  07B5  3004               	movlw	4
   438  07B6  00F7               	movwf	main@i
   439  07B7  3000               	movlw	0
   440  07B8  00F8               	movwf	main@i+1
   441  07B9                     l744:	
   442                           ;main.c: 181: while(i>=1) {
   443                           
   444  07B9  0877               	movf	main@i,w
   445  07BA  0478               	iorwf	main@i+1,w
   446  07BB  1903               	btfsc	3,2
   447  07BC  2FE4               	goto	l746
   448                           
   449                           ;main.c: 182: seg(b);
   450  07BD  0876               	movf	main@b+1,w
   451  07BE  00F1               	movwf	seg@numeric+1
   452  07BF  0875               	movf	main@b,w
   453  07C0  00F0               	movwf	seg@numeric
   454  07C1  3187  2700  3187   	fcall	_seg
   455                           
   456                           ;main.c: 184: RB1 = 1;
   457  07C4  0020               	movlb	0	; select bank0
   458  07C5  148D               	bsf	13,1	;volatile
   459                           
   460                           ;main.c: 185: RB2 = 0;
   461  07C6  110D               	bcf	13,2	;volatile
   462                           
   463                           ;main.c: 187: Wait(1);
   464  07C7  3001               	movlw	1
   465  07C8  00F0               	movwf	Wait@num
   466  07C9  3000               	movlw	0
   467  07CA  00F1               	movwf	Wait@num+1
   468  07CB  3186  26E9  3187   	fcall	_Wait
   469                           
   470                           ;main.c: 189: seg(a);
   471  07CE  087A               	movf	main@a+1,w
   472  07CF  00F1               	movwf	seg@numeric+1
   473  07D0  0879               	movf	main@a,w
   474  07D1  00F0               	movwf	seg@numeric
   475  07D2  3187  2700  3187   	fcall	_seg
   476                           
   477                           ;main.c: 190: RB1 = 0;
   478  07D5  0020               	movlb	0	; select bank0
   479  07D6  108D               	bcf	13,1	;volatile
   480                           
   481                           ;main.c: 191: RB2 = 1;
   482  07D7  150D               	bsf	13,2	;volatile
   483                           
   484                           ;main.c: 194: Wait(1);
   485  07D8  3001               	movlw	1
   486  07D9  00F0               	movwf	Wait@num
   487  07DA  3000               	movlw	0
   488  07DB  00F1               	movwf	Wait@num+1
   489  07DC  3186  26E9  3187   	fcall	_Wait
   490                           
   491                           ;main.c: 196: i--;
   492  07DF  3001               	movlw	1
   493  07E0  02F7               	subwf	main@i,f
   494  07E1  3000               	movlw	0
   495  07E2  3BF8               	subwfb	main@i+1,f
   496  07E3  2FB9               	goto	l744
   497  07E4                     l746:	
   498                           
   499                           ;main.c: 197: }
   500                           ;main.c: 199: a++;
   501  07E4  3001               	movlw	1
   502  07E5  07F9               	addwf	main@a,f
   503  07E6  3000               	movlw	0
   504  07E7  3DFA               	addwfc	main@a+1,f
   505                           
   506                           ;main.c: 200: if(a == 10) {
   507  07E8  300A               	movlw	10
   508  07E9  0679               	xorwf	main@a,w
   509  07EA  047A               	iorwf	main@a+1,w
   510  07EB  1D03               	btfss	3,2
   511  07EC  2FF3               	goto	l754
   512                           
   513                           ;main.c: 201: a = 0;
   514  07ED  01F9               	clrf	main@a
   515  07EE  01FA               	clrf	main@a+1
   516                           
   517                           ;main.c: 202: b++;
   518  07EF  3001               	movlw	1
   519  07F0  07F5               	addwf	main@b,f
   520  07F1  3000               	movlw	0
   521  07F2  3DF6               	addwfc	main@b+1,f
   522  07F3                     l754:	
   523                           
   524                           ;main.c: 203: }
   525                           ;main.c: 205: if(b == 10) {
   526  07F3  300A               	movlw	10
   527  07F4  0675               	xorwf	main@b,w
   528  07F5  0476               	iorwf	main@b+1,w
   529  07F6  1D03               	btfss	3,2
   530  07F7  2FB5               	goto	l726
   531                           
   532                           ;main.c: 206: b = 0;
   533  07F8  01F5               	clrf	main@b
   534  07F9  01F6               	clrf	main@b+1
   535                           
   536                           ;main.c: 207: a = 0;
   537  07FA  01F9               	clrf	main@a
   538  07FB  01FA               	clrf	main@a+1
   539  07FC  2FB5               	goto	l726
   540  07FD                     __end_of_main:	
   541                           
   542                           	psect	text1
   543  0700                     __ptext1:	
   544 ;; *************** function _seg *****************
   545 ;; Defined at:
   546 ;;		line 57 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  numeric         2    0[COMMON] int 
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   560 ;;      Params:         2       0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0
   563 ;;      Totals:         2       0       0       0       0       0
   564 ;;Total ram usage:        2 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _seg
   575  0700                     _seg:	
   576                           
   577                           ;main.c: 58: switch(numeric){
   578                           
   579                           ;incstack = 0
   580                           ; Regs used in _seg: [wreg-fsr0h+status,2+status,0]
   581  0700  2F5B               	goto	l682
   582  0701                     l47:	
   583                           ;main.c: 59: case 0:
   584                           
   585                           
   586                           ;main.c: 60: RA0 = 0;
   587  0701  0020               	movlb	0	; select bank0
   588  0702  100C               	bcf	12,0	;volatile
   589                           
   590                           ;main.c: 61: RA1 = 1;
   591  0703  148C               	bsf	12,1	;volatile
   592                           
   593                           ;main.c: 62: RA2 = 0;
   594  0704  110C               	bcf	12,2	;volatile
   595                           
   596                           ;main.c: 63: RA3 = 0;
   597  0705  118C               	bcf	12,3	;volatile
   598                           
   599                           ;main.c: 64: RA7 = 0;
   600  0706  138C               	bcf	12,7	;volatile
   601                           
   602                           ;main.c: 65: RB4 = 0;
   603  0707  120D               	bcf	13,4	;volatile
   604                           
   605                           ;main.c: 66: RB5 = 0;
   606  0708  128D               	bcf	13,5	;volatile
   607                           
   608                           ;main.c: 67: break;
   609  0709  0008               	return
   610  070A                     l49:	
   611                           ;main.c: 68: case 1:
   612                           
   613                           
   614                           ;main.c: 69: RA0 = 1;
   615  070A  0020               	movlb	0	; select bank0
   616  070B  140C               	bsf	12,0	;volatile
   617                           
   618                           ;main.c: 70: RA1 = 1;
   619  070C  148C               	bsf	12,1	;volatile
   620                           
   621                           ;main.c: 71: RA2 = 0;
   622  070D  110C               	bcf	12,2	;volatile
   623                           
   624                           ;main.c: 72: RA3 = 1;
   625  070E  158C               	bsf	12,3	;volatile
   626                           
   627                           ;main.c: 73: RA7 = 1;
   628  070F  178C               	bsf	12,7	;volatile
   629                           
   630                           ;main.c: 74: RB4 = 0;
   631  0710  120D               	bcf	13,4	;volatile
   632                           
   633                           ;main.c: 75: RB5 = 1;
   634  0711  168D               	bsf	13,5	;volatile
   635                           
   636                           ;main.c: 76: break;
   637  0712  0008               	return
   638  0713                     l50:	
   639                           ;main.c: 77: case 2:
   640                           
   641                           
   642                           ;main.c: 78: RA0 = 1;
   643  0713  0020               	movlb	0	; select bank0
   644  0714  140C               	bsf	12,0	;volatile
   645                           
   646                           ;main.c: 79: RA1 = 0;
   647  0715  108C               	bcf	12,1	;volatile
   648                           
   649                           ;main.c: 80: RA2 = 0;
   650  0716  110C               	bcf	12,2	;volatile
   651                           
   652                           ;main.c: 81: RA3 = 0;
   653  0717  118C               	bcf	12,3	;volatile
   654                           
   655                           ;main.c: 82: RA7 = 0;
   656  0718  138C               	bcf	12,7	;volatile
   657                           
   658                           ;main.c: 83: RB4 = 1;
   659  0719  160D               	bsf	13,4	;volatile
   660                           
   661                           ;main.c: 84: RB5 = 0;
   662  071A  128D               	bcf	13,5	;volatile
   663                           
   664                           ;main.c: 85: break;
   665  071B  0008               	return
   666  071C                     l51:	
   667                           ;main.c: 86: case 3:
   668                           
   669                           
   670                           ;main.c: 87: RA0 = 1;
   671  071C  0020               	movlb	0	; select bank0
   672  071D  140C               	bsf	12,0	;volatile
   673                           
   674                           ;main.c: 88: RA1 = 0;
   675  071E  108C               	bcf	12,1	;volatile
   676                           
   677                           ;main.c: 89: RA2 = 0;
   678  071F  110C               	bcf	12,2	;volatile
   679                           
   680                           ;main.c: 90: RA3 = 0;
   681  0720  118C               	bcf	12,3	;volatile
   682                           
   683                           ;main.c: 91: RA7 = 0;
   684  0721  138C               	bcf	12,7	;volatile
   685                           
   686                           ;main.c: 92: RB4 = 0;
   687  0722  120D               	bcf	13,4	;volatile
   688                           
   689                           ;main.c: 93: RB5 = 1;
   690  0723  168D               	bsf	13,5	;volatile
   691                           
   692                           ;main.c: 94: break;
   693  0724  0008               	return
   694  0725                     l52:	
   695                           ;main.c: 95: case 4:
   696                           
   697                           
   698                           ;main.c: 96: RA0 = 0;
   699  0725  0020               	movlb	0	; select bank0
   700  0726  100C               	bcf	12,0	;volatile
   701                           
   702                           ;main.c: 97: RA1 = 0;
   703  0727  108C               	bcf	12,1	;volatile
   704                           
   705                           ;main.c: 98: RA2 = 0;
   706  0728  110C               	bcf	12,2	;volatile
   707                           
   708                           ;main.c: 99: RA3 = 1;
   709  0729  158C               	bsf	12,3	;volatile
   710                           
   711                           ;main.c: 100: RA7 = 1;
   712  072A  178C               	bsf	12,7	;volatile
   713                           
   714                           ;main.c: 101: RB4 = 0;
   715  072B  120D               	bcf	13,4	;volatile
   716                           
   717                           ;main.c: 102: RB5 = 1;
   718  072C  168D               	bsf	13,5	;volatile
   719                           
   720                           ;main.c: 103: break;
   721  072D  0008               	return
   722  072E                     l53:	
   723                           ;main.c: 104: case 5:
   724                           
   725                           
   726                           ;main.c: 105: RA0 = 0;
   727  072E  0020               	movlb	0	; select bank0
   728  072F  100C               	bcf	12,0	;volatile
   729                           
   730                           ;main.c: 106: RA1 = 0;
   731  0730  108C               	bcf	12,1	;volatile
   732                           
   733                           ;main.c: 107: RA2 = 1;
   734  0731  150C               	bsf	12,2	;volatile
   735                           
   736                           ;main.c: 108: RA3 = 0;
   737  0732  118C               	bcf	12,3	;volatile
   738                           
   739                           ;main.c: 109: RA7 = 0;
   740  0733  138C               	bcf	12,7	;volatile
   741                           
   742                           ;main.c: 110: RB4 = 0;
   743  0734  120D               	bcf	13,4	;volatile
   744                           
   745                           ;main.c: 111: RB5 = 1;
   746  0735  168D               	bsf	13,5	;volatile
   747                           
   748                           ;main.c: 112: break;
   749  0736  0008               	return
   750  0737                     l54:	
   751                           ;main.c: 113: case 6:
   752                           
   753                           
   754                           ;main.c: 114: RA0 = 0;
   755  0737  0020               	movlb	0	; select bank0
   756  0738  100C               	bcf	12,0	;volatile
   757                           
   758                           ;main.c: 115: RA1 = 0;
   759  0739  108C               	bcf	12,1	;volatile
   760                           
   761                           ;main.c: 116: RA2 = 1;
   762  073A  150C               	bsf	12,2	;volatile
   763                           
   764                           ;main.c: 117: RA3 = 0;
   765  073B  118C               	bcf	12,3	;volatile
   766                           
   767                           ;main.c: 118: RA7 = 0;
   768  073C  138C               	bcf	12,7	;volatile
   769                           
   770                           ;main.c: 119: RB4 = 0;
   771  073D  120D               	bcf	13,4	;volatile
   772                           
   773                           ;main.c: 120: RB5 = 0;
   774  073E  128D               	bcf	13,5	;volatile
   775                           
   776                           ;main.c: 121: break;
   777  073F  0008               	return
   778  0740                     l55:	
   779                           ;main.c: 122: case 7:
   780                           
   781                           
   782                           ;main.c: 123: RA0 = 1;
   783  0740  0020               	movlb	0	; select bank0
   784  0741  140C               	bsf	12,0	;volatile
   785                           
   786                           ;main.c: 124: RA1 = 1;
   787  0742  148C               	bsf	12,1	;volatile
   788                           
   789                           ;main.c: 125: RA2 = 0;
   790  0743  110C               	bcf	12,2	;volatile
   791                           
   792                           ;main.c: 126: RA3 = 1;
   793  0744  158C               	bsf	12,3	;volatile
   794                           
   795                           ;main.c: 127: RA7 = 0;
   796  0745  138C               	bcf	12,7	;volatile
   797                           
   798                           ;main.c: 128: RB4 = 0;
   799  0746  120D               	bcf	13,4	;volatile
   800                           
   801                           ;main.c: 129: RB5 = 1;
   802  0747  168D               	bsf	13,5	;volatile
   803                           
   804                           ;main.c: 130: break;
   805  0748  0008               	return
   806  0749                     l56:	
   807                           ;main.c: 131: case 8:
   808                           
   809                           
   810                           ;main.c: 132: RA0 = 0;
   811  0749  0020               	movlb	0	; select bank0
   812  074A  100C               	bcf	12,0	;volatile
   813                           
   814                           ;main.c: 133: RA1 = 0;
   815  074B  108C               	bcf	12,1	;volatile
   816                           
   817                           ;main.c: 134: RA2 = 0;
   818  074C  110C               	bcf	12,2	;volatile
   819                           
   820                           ;main.c: 135: RA3 = 0;
   821  074D  118C               	bcf	12,3	;volatile
   822                           
   823                           ;main.c: 136: RA7 = 0;
   824  074E  138C               	bcf	12,7	;volatile
   825                           
   826                           ;main.c: 137: RB4 = 0;
   827  074F  120D               	bcf	13,4	;volatile
   828                           
   829                           ;main.c: 138: RB5 = 0;
   830  0750  128D               	bcf	13,5	;volatile
   831                           
   832                           ;main.c: 139: break;
   833  0751  0008               	return
   834  0752                     l57:	
   835                           ;main.c: 140: case 9:
   836                           
   837                           
   838                           ;main.c: 141: RA0 = 0;
   839  0752  0020               	movlb	0	; select bank0
   840  0753  100C               	bcf	12,0	;volatile
   841                           
   842                           ;main.c: 142: RA1 = 0;
   843  0754  108C               	bcf	12,1	;volatile
   844                           
   845                           ;main.c: 143: RA2 = 0;
   846  0755  110C               	bcf	12,2	;volatile
   847                           
   848                           ;main.c: 144: RA3 = 1;
   849  0756  158C               	bsf	12,3	;volatile
   850                           
   851                           ;main.c: 145: RA7 = 0;
   852  0757  138C               	bcf	12,7	;volatile
   853                           
   854                           ;main.c: 146: RB4 = 0;
   855  0758  120D               	bcf	13,4	;volatile
   856                           
   857                           ;main.c: 147: RB5 = 1;
   858  0759  168D               	bsf	13,5	;volatile
   859                           
   860                           ;main.c: 149: }
   861                           
   862                           ;main.c: 148: break;
   863  075A  0008               	return
   864  075B                     l682:	
   865                           
   866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   867                           ; Switch size 1, requested type "space"
   868                           ; Number of cases is 1, Range of values is 0 to 0
   869                           ; switch strategies available:
   870                           ; Name         Instructions Cycles
   871                           ; simple_byte            4     3 (average)
   872                           ; direct_byte            8     6 (fixed)
   873                           ; jumptable            260     6 (fixed)
   874                           ;	Chosen strategy is simple_byte
   875  075B  0871               	movf	seg@numeric+1,w
   876  075C  3A00               	xorlw	0	; case 0
   877  075D  1903               	skipnz
   878  075E  2F60               	goto	l798
   879  075F  2F6A               	goto	l58
   880  0760                     l798:	
   881                           
   882                           ; Switch size 1, requested type "space"
   883                           ; Number of cases is 10, Range of values is 0 to 9
   884                           ; switch strategies available:
   885                           ; Name         Instructions Cycles
   886                           ; direct_byte           26     6 (fixed)
   887                           ; simple_byte           31    16 (average)
   888                           ; jumptable            260     6 (fixed)
   889                           ;	Chosen strategy is direct_byte
   890  0760  0870               	movf	seg@numeric,w
   891  0761  0084               	movwf	4
   892  0762  300A               	movlw	10
   893  0763  0204               	subwf	4,w
   894  0764  1803               	skipnc
   895  0765  0008               	return
   896  0766  3180               	movlp	high S800
   897  0767  3504               	lslf	4,w
   898  0768  3E04               	addlw	low S800
   899  0769  0082               	movwf	2
   900  076A                     l58:	
   901  076A  0008               	return
   902  076B                     __end_of_seg:	
   903                           
   904                           	psect	swtext1
   905  0004                     __pswtext1:	
   906  0004                     S800:	
   907  0004  3187  2F01         	ljmp	l47
   908  0006  3187  2F0A         	ljmp	l49
   909  0008  3187  2F13         	ljmp	l50
   910  000A  3187  2F1C         	ljmp	l51
   911  000C  3187  2F25         	ljmp	l52
   912  000E  3187  2F2E         	ljmp	l53
   913  0010  3187  2F37         	ljmp	l54
   914  0012  3187  2F40         	ljmp	l55
   915  0014  3187  2F49         	ljmp	l56
   916  0016  3187  2F52         	ljmp	l57
   917                           
   918                           	psect	text2
   919  06DC                     __ptext2:	
   920 ;; *************** function _init *****************
   921 ;; Defined at:
   922 ;;		line 47 in file "main.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   936 ;;      Params:         0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0
   939 ;;      Totals:         0       0       0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _init
   951  06DC                     _init:	
   952                           
   953                           ;main.c: 48: OSCCON = 0b01110010;
   954                           
   955                           ;incstack = 0
   956                           ; Regs used in _init: [wreg+status,2]
   957  06DC  3072               	movlw	114
   958  06DD  0021               	movlb	1	; select bank1
   959  06DE  0099               	movwf	25	;volatile
   960                           
   961                           ;main.c: 49: ANSELA = 0b00000000;
   962  06DF  0023               	movlb	3	; select bank3
   963  06E0  018C               	clrf	12	;volatile
   964                           
   965                           ;main.c: 50: ANSELB = 0b00000000;
   966  06E1  018D               	clrf	13	;volatile
   967                           
   968                           ;main.c: 51: TRISA = 0b00000000;
   969  06E2  0021               	movlb	1	; select bank1
   970  06E3  018C               	clrf	12	;volatile
   971                           
   972                           ;main.c: 52: TRISB = 0b00000000;
   973  06E4  018D               	clrf	13	;volatile
   974                           
   975                           ;main.c: 53: PORTA = 0b00000000;
   976  06E5  0020               	movlb	0	; select bank0
   977  06E6  018C               	clrf	12	;volatile
   978                           
   979                           ;main.c: 54: PORTB = 0b00000000;
   980  06E7  018D               	clrf	13	;volatile
   981  06E8  0008               	return
   982  06E9                     __end_of_init:	
   983                           
   984                           	psect	text3
   985  06E9                     __ptext3:	
   986 ;; *************** function _Wait *****************
   987 ;; Defined at:
   988 ;;		line 39 in file "main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;  num             2    0[COMMON] unsigned int 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  i               2    3[COMMON] int 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1002 ;;      Params:         2       0       0       0       0       0
  1003 ;;      Locals:         2       0       0       0       0       0
  1004 ;;      Temps:          1       0       0       0       0       0
  1005 ;;      Totals:         5       0       0       0       0       0
  1006 ;;Total ram usage:        5 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _Wait
  1017  06E9                     _Wait:	
  1018                           
  1019                           ;main.c: 40: int i ;
  1020                           ;main.c: 42: for (i=0 ; i<num ; i++){
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _Wait: [wreg+status,2]
  1024  06E9  01F3               	clrf	Wait@i
  1025  06EA  01F4               	clrf	Wait@i+1
  1026  06EB                     l37:	
  1027  06EB  0871               	movf	Wait@num+1,w
  1028  06EC  0274               	subwf	Wait@i+1,w
  1029  06ED  1D03               	skipz
  1030  06EE  2EF1               	goto	u85
  1031  06EF  0870               	movf	Wait@num,w
  1032  06F0  0273               	subwf	Wait@i,w
  1033  06F1                     u85:	
  1034  06F1  1803               	btfsc	3,0
  1035  06F2  0008               	return
  1036                           
  1037                           ;main.c: 43: _delay((unsigned long)((10)*(8000000/4000.0)));
  1038  06F3  301A               	movlw	26
  1039  06F4  00F2               	movwf	??_Wait
  1040  06F5  30F8               	movlw	248
  1041  06F6                     u157:	
  1042  06F6  0B89               	decfsz	9,f
  1043  06F7  2EF6               	goto	u157
  1044  06F8  0BF2               	decfsz	??_Wait,f
  1045  06F9  2EF6               	goto	u157
  1046  06FA  3200               	nop2
  1047  06FB  3001               	movlw	1
  1048  06FC  07F3               	addwf	Wait@i,f
  1049  06FD  3000               	movlw	0
  1050  06FE  3DF4               	addwfc	Wait@i+1,f
  1051  06FF  2EEB               	goto	l37
  1052  0700                     __end_of_Wait:	
  1053  007E                     btemp	set	126	;btemp
  1054  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     725
                                              5 COMMON     8     8      0
                               _Wait
                               _init
                                _seg
 ---------------------------------------------------------------------------------
 (1) _seg                                                  2     0      2     234
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Wait                                                 5     3      2     258
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Wait
   _init
   _seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jan 12 10:52:10 2020

                      pc 0002              __CFG_CP$OFF 0000                       l50 0713  
                     l51 071C                       l52 0725                       l37 06EB  
                     l53 072E                       l54 0737                       l55 0740  
                     l47 0701                       l56 0749                       l57 0752  
                     l49 070A                       l58 076A                       u85 06F1  
                    S800 0004                      l704 077B                      l722 077F  
                    l724 07AA                      l726 07B5                      l744 07B9  
                    l682 075B                      l754 07F3                      l746 07E4  
                    l798 0760                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RA3 0063                      _RB1 0069  
                    _RB2 006A                      _RB4 006C                      _RA7 0067  
                    _RB5 006D                      u157 06F6             __CFG_CPD$OFF 0000  
                    _seg 0700             __CFG_BORV$HI 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     ?_seg 0070             __CFG_WRT$OFF 0000  
                   _Wait 06E9                     _main 076B                     _init 06DC  
                   fsr0l 0004                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0002            __CFG_IESO$OFF 0000                    ??_seg 0072  
                  ?_Wait 0070                    ?_main 0070                    ?_init 0070  
          __CFG_WDTE$OFF 0000                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D            __CFG_PWRTE$ON 0000  
                  Wait@i 0073           __CFG_FCMEN$OFF 0000                    main@a 0079  
                  main@b 0075                    main@i 0077                    main@x 007B  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07FD             __end_of_Wait 0700             __end_of_main 07FD  
           __end_of_init 06E9                   ??_Wait 0072                   ??_main 0075  
                 ??_init 0070           __CFG_PLLEN$OFF 0000                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099           __CFG_STVREN$ON 0000  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pmaintext 076B  
                Wait@num 0070                  __ptext1 0700                  __ptext2 06DC  
                __ptext3 06E9             __size_of_seg 006B     end_of_initialization 07FD  
       __CFG_FOSC$INTOSC 0000      start_initialization 07FD              __end_of_seg 076B  
             seg@numeric 0070                ___latbits 0001                __pswtext1 0004  
          __size_of_Wait 0017            __size_of_main 0092            __size_of_init 000D  
      __CFG_CLKOUTEN$OFF 0000  
